/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
 struct ListNode* reverse(struct ListNode* head){
     if(head==NULL || head->next==NULL)
     {
         return head;
     }
     struct ListNode* q=reverse(head->next);
     head->next->next=head;
     head->next=NULL;
     return q;
 }
bool isPalindrome(struct ListNode* head){
   
    if(head==NULL || head->next==NULL)
    {
        return true;
    }
    struct ListNode* slow=head;
    struct ListNode* fast=head;

    while(fast->next!=NULL && fast->next->next!=NULL){
        slow=slow->next;
        fast=fast->next->next;
        
    }

    slow->next= reverse(slow->next);
    slow=slow->next;
    while(slow!=NULL)
    {
        if(head->val!=slow->val)
        {
            return false;
        }
        head=head->next;
        slow=slow->next;
    }
return true;
}
